spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://ep-soft-moon-a18wdgk7-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:neondb_owner}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:npg_w4O7CcpkWKLd}
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

jwt.secret=${JWT_SECRET:B374A26A71490437AA024E4FADD5B497FDFF1A8EA6FF12F6FB65AF2720B59CCF}

# Bind to Render-provided PORT if set
server.port=${PORT:8080}

# CORS (not needed when frontend is served by backend). Keep for local dev.
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:5173,https://book-store-mu-ochre.vercel.app,https://book-store-7w4s.onrender.com}

# File Upload (consider a persistent disk path in Render)
file.upload-dir=${FILE_UPLOAD_DIR:./uploads}

# Multipart File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Logging
logging.level.com.bookstore.backend=TRACE
